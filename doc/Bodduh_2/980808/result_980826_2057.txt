step1 128 patterns right: (count=12)
128
182
218
281
812
821
228
282
822
882
828
288
step1 128 patterns left: (count=12)
128
182
218
281
812
821
228
282
822
882
828
288
col=0
left: (count=7)
16: 2d 8 24: 1d 2d 20: 8 28: 8 8: 8 12: 1 2d 8d 4: 1d 2 
right: (count=1)
13: 2d 8 
step 5 pairs: (count=2)
16,13 12,13 
step2 128 patterns: (count=6)
128
182
218
281
812
821
step2 +- patterns: (count=11)
-+-
--+++-
-++++-
-+++-+
-+++-+++-
--+-+-+--
--+++-++---+
--+++--+++--
-++++-++--++
-+++-++-+-++
-+++-++-+++-
step 2 pairs: (count=2)
16,13: 8 12,13: 1d 
step 4 pairs: (count=2)
16,13: 2 4d 6d 8d 12,13: 2d 4d 6d 8d 
step3 mask: 0x01
step 3 pairs: (count=3)
12,13,1: 0 16,13,1: 0 12,13,0: 0 
step 7 pairs: (count=3)
12,13 16,13 12,13 
finalOBV: 2 --> Prioritize(3 pairs)
prioritizing...
pairs:
12,13 
16,13 
12,13 
ordering pairs by step3 score
12,13	0
16,13	0
12,13	0
ordering pairs by total score
12,13	0
12,13	0
16,13	1
 --> 2, 12,13

step1 128 patterns right: (count=5)
218
281
228
282
288
step1 128 patterns left: (count=10)
218
281
812
821
228
282
822
882
828
288
col=1
left: (count=7)
10: 8 26: 2d 8 14: 1 2d 8d 6: 8 2: 1 2 8d 18: 8 22: 1d 2 8 
right: (count=1)
16: 1 2 8d 
step 5 pairs: (count=5)
10,16 14,16 2,16 18,16 22,16 
step2 128 patterns: (count=2)
128
182
step2 +- patterns: (count=11)
-+-
--+++-
-++++-
-+++-+
-+++-+++-
--+-+-+--
--+++-++---+
--+++--+++--
-++++-++--++
-+++-++-+-++
-+++-++-+++-
step 2 pairs: (count=5)
10,16: 8d 14,16: 2d 2,16: 2 18,16: 2d 22,16: 2d 
step 4 pairs: (count=5)
10,16: 2d 4d 6d 8 14,16: 2d 4 6d 8d 2,16: 2d 4d 6 8 18,16: 2d 4 6d 8 22,16: 2d 4d 6d 8 
step3 mask: 0x02
step 3 pairs: (count=10)
2,16,0: 0 2,16,1: 1 14,16,1: 1 18,16,1: 1 22,16,1: 1 10,16,1: 1 14,16,0: 1 10,16,0: 1 22,16,0: 1 18,16,0: 1 
step 6 pairs: (count=10)
2,16 2,16 14,16 18,16 22,16 10,16 14,16 10,16 22,16 18,16 
step 7 pairs: (count=6)
2,16 2,16 14,16 10,16 14,16 10,16 
finalOBV: 2 --> Prioritize(6 pairs)
prioritizing...
pairs:
2,16 
2,16 
14,16 
10,16 
14,16 
10,16 
ordering pairs by step3 score
2,16	0
14,16	1
10,16	1
10,16	1
2,16	1
14,16	1
 --> 0, 2,16

step1 128 patterns right: (count=3)
281
282
288
step1 128 patterns left: (count=4)
281
282
882
288
col=2
left: (count=6)
7: 2d 8 11: 2d 8 23: 1d 2 8 19: 8 15: 1d 2d 8 3: 1d 2 8 
right: (count=7)
1: 1 2 8 25: 1 2 8d 5: 8 9: 1 2 8d 21: 1 2d 13: 2 8 17: 1d 8 
step 5 pairs: (count=34)
7,1 7,25 7,5 7,9 7,21 7,13 11,1 11,25 11,5 11,9 11,21 11,13 11,17 23,25 23,5 23,9 23,17 19,1 19,25 19,5 19,9 19,21 19,13 15,1 15,25 15,5 15,9 15,21 15,13 15,17 3,25 3,5 3,9 3,17 
step2 128 patterns: (count=1)
128
step2 +- patterns: (count=7)
-+-
-++++-
-+++-+
-+++-+++-
-++++-++--++
-+++-++-+-++
-+++-++-+++-
step 2 pairs: (count=12)
7,1: 8d 11,25: 8 11,5: 8 23,17: 8 19,25: 8d 19,5: 8 19,13: 8 15,1: 8 15,9: 8 15,21: 8 3,5: 8d 3,9: 8 
step 4 pairs: (count=12)
7,1: 2d 4d 6d 8 11,25: 2 4d 6d 8d 11,5: 2d 4 6d 8 23,17: 2d 4 6d 8d 19,25: 2d 4d 6d 8 19,5: 2d 4 6d 8d 19,13: 2d 4 6d 8d 15,1: 2d 4 6 8d 15,9: 2d 4 6d 8 15,21: 2d 4d 6d 8 3,5: 2d 4d 6d 8 3,9: 2d 4 6d 8d 
step3 mask: 0x04
step 3 pairs: (count=9)
19,5,0: 0 15,1,0: 0 3,5,0: 0 7,1,0: 0 15,21,0: 1 3,9,0: 1 19,25,0: 1 11,5,0: 1 11,25,0: 1 
step 6 pairs: (count=8)
19,5 15,1 3,5 7,1 3,9 19,25 11,5 11,25 
step 7 pairs: (count=6)
19,5 15,1 3,5 7,1 3,9 11,5 
finalOBV: 0 --> Prioritize(6 pairs)
prioritizing...
pairs:
19,5 
15,1 
3,5 
7,1 
3,9 
11,5 
ordering pairs by step3 score
3,5	0
7,1	0
19,5	0
15,1	0
11,5	1
3,9	1
ordering pairs by total score
7,1	1
3,5	1
15,1	2
3,9	2
19,5	3
11,5	3
removing pairs with higher scores
7,1	1
3,5	1
after applying CanSatisfyStep1Matches
7,1	1
3,5	1

remained pairs:
7,1,0	1
3,5,0	1
